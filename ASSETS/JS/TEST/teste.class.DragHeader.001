class DragHeader {
  constructor(wrapperSelector, headerSelector, options = {}) {
    this.wrapper = document.querySelector(wrapperSelector);
    this.header = this.wrapper.querySelector(headerSelector);
    this.options = Object.assign({}, DragHeader.defaultOptions, options);
  }

  static get defaultOptions() {
    return {
      activeClass: "active"
    };
  }

  onDrag({ movementX, movementY }) {
    let getStyle = window.getComputedStyle(this.wrapper);
    let leftVal = parseInt(getStyle.left);
    let topVal = parseInt(getStyle.top);
    this.wrapper.style.left = `${leftVal + movementX}px`;
    this.wrapper.style.top = `${topVal + movementY}px`;
  }

  init() {
    this.header.addEventListener("mousedown", () => {
      this.header.classList.add(this.options.activeClass);
      this.header.addEventListener("mousemove", this.onDrag.bind(this));
    });
    document.addEventListener("mouseup", () => {
      this.header.classList.remove(this.options.activeClass);
      this.header.removeEventListener("mousemove", this.onDrag.bind(this));
    });
  }
}

const dragHeader = new DragHeader("body > div.wrapper", "body > div.wrapper > header", {
  activeClass: "header-active"
});
dragHeader.init();
